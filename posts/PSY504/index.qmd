---
title: "Mediation Analysis in R"
execute:
  output: false
descripton: "PSY504 Final Project"
author: "Claire Whiting"
date: "2023-05-16"
categories: [R]

website:
  title: "Claire Whiting"
  navbar:
    title: false
    right:
      - href: index.qmd
        text: Home
      - text: CV
        file: cv.pdf
      - posts.qmd
      - icon: github
        href: https://github.com/claire-whiting
      - icon: twitter
        href: https://twitter.com/claire_whiting
  page-footer: 
    background: light
    left: 
      - icon: github
        href: https://github.com/claire-whiting
      - icon: twitter
        href: https://twitter.com/claire_whiting
      - icon: envelope
        href: mailto:claire.whiting@princeton.edu
---

### Intro

Here, I'll provide a walkthrough of a mediation analysis, along with some initial statistical tests. This example uses data from a study examining the effects of a linguistic distancing manipulation on reappraisal efficacy in a sample of adolescents. Participants were randomized into control and distanced groups before completing a cognitive reappraisal exercise. The distanced group were instructed to avoid using the word "I" and the present tense, while the control group received no specific instructions. Affect was measured both pre- and post-reappraisal on a sliding scale from Very Bad (-100) to Very Good (100). The pre-post change in affect was used as our outcome measure of reappraisal success. </span>

These are the 4 questions we wanted to test:

1.  Does linguistic distancing differ by condition?
2.  Is linguistic distancing correlated with affect change?
3.  Does affect change differ by condition?
4.  Does linguistic distancing mediate the association between condition and affect change?

\[image of mediation model\]

### Environment set-up

First, lets load in all the packages we need. If you don't have a package installed, you can run [install_packages('packagename')]{style="color:blue;"}

```{r}
library(tidyverse)
library(dplyr)
library(lsr)
library(mediation)
library(datawizard)
library(report)
library(knitr) # For nice tables
library(kableExtra) # For nice tables
library(ggplot2) # For nice plots
```

Next, load in your data.

```{r}
data <- read_csv("data.csv")
```

My data contains the following variables:

**ID**: Participant ID

**Condition**: 0 for control group, 1 for distanced group

**Duration_minutes**: Number of minutes taken to complete task

**psychdist**: Score for linguistic distance

**affect_change**: Change in affect from pre- to post-reappraisal

**WC**: Total word count for reappraisal response

Here are the first 6 participants in the dataset:

```{r}
#| code-fold: true
#| output: true
head(data) %>%
  kable()
```

### Question 1. Does linguistic distancing differ by condition?

We can use a t-test to find out whether the linguistic distancing manipulation worked as expected i.e., whether the distanced group had higher distancing scores compared to the control group. The effect size can be measured using the Cohen's d statistic.

```{r}
# Does linguistic distancing differ by condition?
t.test(psychdist ~ Condition, data=data)
cohensD(psychdist ~ Condition, data=data)
```

```{r}
#| code-fold: true
#| output: true
t.test(psychdist ~ Condition, data=data) %>%
  report_table() %>%
  summary()
```

There is a significant difference between the two groups, *p* \< .001, d = .42.

We can visualize this difference using a bar plot. Here, I first calcualate the 95% confidence intervals, so we can show these on the plot. Then I use [ggplot]{style="color:blue;"} to create the plot - take a look at the comments to see what each line of code is doing.

```{r}
#| output: true
lingdist_msd <- data %>%
  dplyr::select(ID, Condition, psychdist) %>%
  na.omit() %>% # Remove any missing values
  group_by(Condition) %>%
  summarize(mean = mean(psychdist), # Mean
            sd = sd(psychdist), # Standard deviation
            se = sd / sqrt(n()), # Standard error
            CI_lower = mean - (1.96 * se), # Lower CI bound
            CI_upper = mean + (1.96 * se)) %>% # Upper CI bound
  mutate(Condition = as.factor(Condition))


ggplot(lingdist_msd, aes(x=Condition, y=mean)) + # Input variables
  geom_bar(position=position_dodge(), stat="identity", # Add bars
           fill="#4b5e9c") +
  geom_errorbar(aes(ymin=CI_lower, ymax=CI_upper), width=.2) + # Add CI bars
  scale_x_discrete(labels=c('Control', 
                            'Distanced')) + # Rename x axis labels
  coord_cartesian(ylim=c(-0.2, 0.2)) + # Set y axis limits
  ylab("Mean Linguistic Distance") + xlab("") + # Set axes labels
  theme_light(base_size=20) # Set plot theme and font size
```

### Question 2. Is linguistic distancing correlated with affect change?

We can use a Pearson's correlation test to answer this question. Note, this analysis is across all participants.

```{r}
cor.test(data$psychdist, data$affect_change)
```

```{r}
#| code-fold: true
#| output: true
cor.test(data$psychdist, data$affect_change) %>%
  report_table()
```

These results show that there is a significant positive correlation between linguistic distancing and affect change, *p* \< .001.

We can plot the correlation with a scatterplot, again using [ggplot]{style="color:blue;"}.

```{r}
#| output: true
ggplot(data, aes(x=psychdist, y=affect_change)) + # Input variables
  geom_point(alpha=0.5) + # Add points/dots
  geom_smooth(method="lm") + # Add regression line
  xlab("Linguistic Distance") + ylab("Affect Change") + # Axes labels
  theme_light(base_size=20) # Theme and font size

```

### Question 3. Does affect change differ by condition?

We expected that the groups would differ on affect change - we hypothesized that the distanced group would show a greater affect change than the control group. To test this, we can use a t-test:

```{r}
# Does affect change differ by condition?

t.test(affect_change ~ Condition, data=data)

```

```{r}
#| code-fold: true
#| output: true
t.test(affect_change ~ Condition, data=data) %>%
  report_table() %>%
  summary()
```

There is actually no statistically significant difference between the two groups, *p* = .479. We can again visualize the two groups using a bar plot:

```{r}
#| output: true
#| code-fold: true
affect_change_msd <- data %>%
  dplyr::select(ID, Condition, affect_change) %>%
  rename(Change = affect_change) %>%
  group_by(Condition) %>%
  summarize(mean = mean(Change),
            sd = sd(Change),
            se = sd / sqrt(n()),
            CI_lower = mean - (1.96 * se),
            CI_upper = mean + (1.96 * se)) %>%
  mutate(Condition = as.factor(Condition))

ggplot(affect_change_msd, aes(x=Condition, y=mean)) + 
  geom_bar(position=position_dodge(), stat="identity",
           fill="#4b5e9c") +
  geom_errorbar(aes(ymin=CI_lower, ymax=CI_upper), width=.2) +
  scale_x_discrete(labels=c('Control', 
                            'Distanced')) +
  coord_cartesian(ylim=c(0,70)) +
  ylab("Mean Affect Change") + xlab("") +
  theme_light(base_size=20)

```

### Question 4. Does linguistic distancing mediate the association between condition and affect change?

Now for the mediation analysis! First, lets standardize our continuous variables (linguistic distance and affect change) using the [datawizard]{style="color:blue;"} package. This will not change the significance of our results, but will provide standardized path estimates which can be more interpretable than non-standardized estimates.

```{r}
# Create standardized variables
data <- data %>% 
  mutate(affect_change_z = datawizard::standardize(affect_change),
         psychdist_z = datawizard::standardize(psychdist))

```

```{r}
#| code-fold: true
#| output: true 
head(data) %>%
  kable()
```

We now have two extra columns (affect_change_z and psychdist_z) which contain the standardized values of psychdist and affect_change, respectively.

For the mediation, we will use the [mediation]{style="color:blue;"} package. We need to define **3** linear regression models:

1.  Total Effect: DV \~ IV

This will give us the the estimate for the **path c** or the **total effect**.

```{r}
fit.totaleffect = lm(affect_change_z ~ Condition, data)
summary(fit.totaleffect)$coefficients
```

2.  Effect of IV on Mediator: M \~ IV

This will give us the estimate for **path a**.

```{r}
fit.mediator =  lm(psychdist_z ~ Condition, data)
summary(fit.mediator)$coefficients
```

3.  Effect of Mediator on DV, while controlling for IV: DV \~ IV + Mediator

This will give us the estimate for the direct effect of the IV on the DV, as well as **path b** of the mediation model.

```{r}
fit.dv = lm(affect_change_z ~ Condition + psychdist_z, data)
summary(fit.dv)$coefficients
```

Now, we can run the mediation analysis using the [mediatio]{style="color:blue;"} function. We need to specify the model for the mediator (regression 2), the model for outcome (regression 3), the treatment variables (Condition) and the mediator (psychdist_z). Then we specify how many bootstrap samples we want and the type of confidence interval we want. Here I have used 10,000 samples with bias-corrected and accelerated (BCa) confidence intervals. Make sure you set a seed before running so that you can get reproducible results each time!

```{r}
set.seed(123)
#results = mediation::mediate(fit.mediator, fit.dv, treat='Condition', mediator='psychdist_z', sims = 10000, boot=T, boot.ci.type = "bca")
```

This gives us the following output:

```{r}
#summary(results)
```

**ACME** stands for *average causal mediation effects*. This is the indirect, or mediation, effect of the IV on the DV. From this, we can see whether we have a significant mediation effect or not. Here, *p* \< .001, so we can conclude that linguistic distance does mediate the effect of Condition on affect change. Note that the mediation effect estimate = **path a** \* **path b,** the values of which we found previously (0.06 = 0.40 \* 0.15).

**ADE** stands for *average direct effects*. This estimate is the effect of the IV on the DV, once we have controlled for the mediator. You can see that this estimate is equal to that found in **regression 3**.

**Total Effect** equals the sum of the direct and indirect effects of the IV on the DV. This is what we found in **regression 1.**

**Prop. Mediated** gives the size of the average causal mediation effects relative to the total effect. In this case, we get a value greater than 1 because the directions of the

```{r}

# Exloring word count

t.test(WC ~ Condition, data=data) 
cohensD(WC ~ Condition, data=data)
summary(lm(affect_change ~ WC*Condition, data=data)) 

```
